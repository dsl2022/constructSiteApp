{"version":3,"sources":["state/markersSlice.js","Markers/DraggableMarker.js","Markers/Markers.js","Markers/helpers.js","Map.js","store.js","index.js"],"names":["markersSlice","createSlice","name","initialState","reducers","addInitMarkers","state","action","payload","markers","actions","getMarkers","DraggableMarker","_ref","rotatedValue","height","width","_ref$x","x","_ref$y","y","centerCor","icon","L","divIcon","iconSize","iconAnchor","className","html","concat","_useState","useState","_useState2","Object","slicedToArray","draggable","setDraggable","_useState3","_useState4","position","setPosition","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","getLatLng","toggleDraggable","useCallback","d","react_default","a","createElement","Marker","latLng","ref","Popup","minWidth","onClick","Markers","markerData","useSelector","markersArray","console","log","map","id","rotation","key","Fragment","src_Map","mapRef","dispatch","useDispatch","useEffect","sampleData","leafletElement","image","imageOverlay","addTo","fitBounds","getBounds","Map","minZoom","crs","CRS","Simple","maxBoundsViscosity","boundsOptions","padding","style","store","configureStore","reducer","markersSliceReducer","rootElement","document","getElementById","ReactDOM","render","es"],"mappings":"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","file":"static/js/main.7f68f1a4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nexport const markersSlice = createSlice({\n  name: \"markers\",\n  initialState,\n  reducers: {\n    addInitMarkers: (state, action) => {\n      if (action.payload.markers) state.markers = action.payload.markers;\n    },\n  },\n});\n\nexport const { addInitMarkers } = markersSlice.actions;\nexport const getMarkers = (state) => state;\n\nexport default markersSlice.reducer;\n","import { Marker, Popup } from \"react-leaflet\";\nimport React, { useRef, useState, useCallback, useMemo } from \"react\";\nimport L from \"leaflet\";\n// const center = {\n//   lat: 51.505,\n//   lng: -0.09,\n// };\n\nexport default function DraggableMarker({\n  rotatedValue,\n  height,\n  width,\n  x = 0,\n  y = 0,\n}) {\n  // x = 0.527375201288245 * 1016,\n  // y = 0.519297519875233 * 1590\n  const centerCor = {\n    x,\n    y,\n  };\n\n  const icon = L.divIcon({\n    iconSize: [20, 20],\n    iconAnchor: [10, 10],\n    className: \"yourClassName\",\n    html: `<img \n    style=\"transform: rotate(${rotatedValue}deg);\"\n    height=\"${height}\" \n    width=\"${width}\" \n    src='https://app.structionsite.com/assets/marker_flat.png'>`,\n  });\n  const [draggable, setDraggable] = useState(false);\n  const [position, setPosition] = useState(centerCor);\n  const markerRef = useRef(null);\n  const eventHandlers = useMemo(\n    () => ({\n      dragend() {\n        const marker = markerRef.current;\n        if (marker != null) {\n          setPosition(marker.getLatLng());\n        }\n      },\n    }),\n    []\n  );\n  const toggleDraggable = useCallback(() => {\n    setDraggable((d) => !d);\n  }, []);\n\n  return (\n    <Marker\n      icon={icon}\n      draggable={draggable}\n      eventHandlers={eventHandlers}\n      position={L.latLng([position.y, position.x])}\n      ref={markerRef}\n    >\n      <Popup minWidth={90}>\n        <span onClick={toggleDraggable}>\n          {draggable\n            ? \"Marker is draggable\"\n            : \"Click here to make marker draggable\"}\n        </span>\n      </Popup>\n    </Marker>\n  );\n}\n","import React from \"react\";\nimport { GenerateMarkersArray } from \"./helpers\";\nimport { useSelector } from \"react-redux\";\nimport { getMarkers } from \"../state/markersSlice\";\nexport default function Markers() {\n  const { markers } = useSelector(getMarkers);\n  //   console.log(\"test markers in Markers\", markers);\n  const markersArray = GenerateMarkersArray(markers.markers);\n  return <>{markersArray}</>;\n}\n","import React from \"react\";\nimport DraggableMarker from \"./DraggableMarker\";\n\nexport function GenerateMarkersArray(markerData) {\n  console.log({ markerData });\n\n  return markerData.map((marker) => {\n    const { id, x, y, rotation } = marker;\n    return (\n      <DraggableMarker\n        key={id}\n        height=\"20\"\n        width=\"20\"\n        x={x * 1016}\n        y={y * 1590}\n        rotatedValue={rotation}\n      />\n    );\n  });\n}\n","import React, { useRef, useEffect } from \"react\";\r\nimport { Map } from \"react-leaflet\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport sampleData from \"./sample_data.json\";\r\nimport { addInitMarkers, getMarkers } from \"./state/markersSlice\";\r\nimport Markers from \"./Markers/Markers\";\r\n\r\nimport { CRS } from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport \"./styles.css\";\r\nimport DraggableMarker from \"./Markers/DraggableMarker\";\r\n\r\nexport default () => {\r\n  const mapRef = useRef(null);\r\n  const markers = useSelector(getMarkers);\r\n  const dispatch = useDispatch();\r\n  console.log({ markers });\r\n\r\n  // var pin = {\r\n  //   x: 0.527375201288245,\r\n  //   y: 0.519297519875233,\r\n  //   created_at: \"2018-06-20 06:04:11 UTC\",\r\n  //   updated_at: \"2018-07-24 20:12:47 UTC\",\r\n  //   img_preview:\r\n  //     \"https://structionsite-code-challenge-assets.s3.us-east-2.amazonaws.com/preview.jpeg\",\r\n  // };\r\n  useEffect(() => {\r\n    dispatch(addInitMarkers(sampleData));\r\n  });\r\n  useEffect(() => {\r\n    const map = mapRef.current.leafletElement;\r\n    const bounds = [\r\n      [0, 0],\r\n      [1016, 1590],\r\n    ];\r\n    const image = L.imageOverlay(\r\n      \"https://structionsite-code-challenge-assets.s3.us-east-2.amazonaws.com/full_map.png\",\r\n      bounds\r\n    ).addTo(map);\r\n\r\n    map.fitBounds(image.getBounds());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <nav>nav bar</nav>\r\n      <Map\r\n        ref={mapRef}\r\n        minZoom={0}\r\n        crs={CRS.Simple}\r\n        maxBoundsViscosity={1.0}\r\n        boundsOptions={{ padding: [50, 50] }}\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        {/* <Marker\r\n          data-key={\"test remove\"}\r\n          draggable={true}\r\n          icon={icon}\r\n          position={[pin.y * 1590, pin.x * 1016]}\r\n        >\r\n          <Popup>\r\n            <img src={pin.img_preview} />\r\n          </Popup>\r\n        </Marker> */}\r\n        <DraggableMarker />\r\n        <Markers />\r\n      </Map>\r\n    </>\r\n  );\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport markersSliceReducer from \"./state/markersSlice\";\nexport const store = configureStore({\n  reducer: {\n    markers: markersSliceReducer,\n  },\n});\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport Map from \"./Map\";\r\nimport \"./styles.css\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nfunction App() {\r\n  return <Map />;\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}